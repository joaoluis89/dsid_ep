# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dsid_pb2 as dsid__pb2


class DsidStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.voidCall = channel.unary_unary(
        '/dsidRpc.Dsid/voidCall',
        request_serializer=dsid__pb2.Empty.SerializeToString,
        response_deserializer=dsid__pb2.Empty.FromString,
        )
    self.longCall = channel.unary_unary(
        '/dsidRpc.Dsid/longCall',
        request_serializer=dsid__pb2.longRequest.SerializeToString,
        response_deserializer=dsid__pb2.longReply.FromString,
        )
    self.eightLongCall = channel.unary_unary(
        '/dsidRpc.Dsid/eightLongCall',
        request_serializer=dsid__pb2.eightLongRequest.SerializeToString,
        response_deserializer=dsid__pb2.eightLongReply.FromString,
        )
    self.stringCall = channel.unary_unary(
        '/dsidRpc.Dsid/stringCall',
        request_serializer=dsid__pb2.stringRequest.SerializeToString,
        response_deserializer=dsid__pb2.stringReply.FromString,
        )
    self.complexCall = channel.unary_unary(
        '/dsidRpc.Dsid/complexCall',
        request_serializer=dsid__pb2.complexRequest.SerializeToString,
        response_deserializer=dsid__pb2.complexReply.FromString,
        )


class DsidServicer(object):
  """The greeting service definition.
  """

  def voidCall(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def longCall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def eightLongCall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def stringCall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def complexCall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DsidServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'voidCall': grpc.unary_unary_rpc_method_handler(
          servicer.voidCall,
          request_deserializer=dsid__pb2.Empty.FromString,
          response_serializer=dsid__pb2.Empty.SerializeToString,
      ),
      'longCall': grpc.unary_unary_rpc_method_handler(
          servicer.longCall,
          request_deserializer=dsid__pb2.longRequest.FromString,
          response_serializer=dsid__pb2.longReply.SerializeToString,
      ),
      'eightLongCall': grpc.unary_unary_rpc_method_handler(
          servicer.eightLongCall,
          request_deserializer=dsid__pb2.eightLongRequest.FromString,
          response_serializer=dsid__pb2.eightLongReply.SerializeToString,
      ),
      'stringCall': grpc.unary_unary_rpc_method_handler(
          servicer.stringCall,
          request_deserializer=dsid__pb2.stringRequest.FromString,
          response_serializer=dsid__pb2.stringReply.SerializeToString,
      ),
      'complexCall': grpc.unary_unary_rpc_method_handler(
          servicer.complexCall,
          request_deserializer=dsid__pb2.complexRequest.FromString,
          response_serializer=dsid__pb2.complexReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dsidRpc.Dsid', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
